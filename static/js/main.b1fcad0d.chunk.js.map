{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/ContactList/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","helpers/filterContacts.js","App.js","index.js"],"names":["ContactForm","state","name","number","handleChangeUserInfo","event","currentTarget","value","setState","resetForm","handleUserFormSubmit","preventDefault","props","handleAddContact","this","onSubmit","className","onChange","type","pattern","title","required","Component","PhonebookListItem","id","onDeleteContact","onClick","ContactList","contacts","map","Filter","onFilter","filterValue","filterContacts","filter","normalizedFilter","toLowerCase","trim","contact","includes","App","some","el","alert","inputId","uuidv4","prev","handleDeleteContact","target","handleFilterContact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1fcad0d.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport \"./ContactForm.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChangeUserInfo = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  handleUserFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.handleAddContact({ ...this.state });\r\n    this.resetForm();\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleUserFormSubmit} className=\"Form\">\r\n        <label className=\"Form__label\">\r\n          Name\r\n          <input\r\n            onChange={this.handleChangeUserInfo}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label className=\"Form__label\">\r\n          Number\r\n          <input\r\n            onChange={this.handleChangeUserInfo}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className=\"Form__add-btn\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import \"./ContactList.css\";\r\n\r\nconst PhonebookListItem = ({ name, number, id, onDeleteContact }) => {\r\n  return (\r\n    <li className=\"Contact__item\">\r\n      <p className=\"Contact__info\">{name}: </p>\r\n      <p className=\"Contact__info\">{number}</p>\r\n      <button\r\n        type=\"button\"\r\n        id={id}\r\n        onClick={onDeleteContact}\r\n        className=\"Contact__delete-btn\"\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default PhonebookListItem;\r\n","import PhonebookListItem from \"./ContactListItem\";\r\nimport \"./ContactList.css\";\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className=\"Contact__list\">\r\n      {contacts.map(({ name, number, id }) => {\r\n        return (\r\n          <PhonebookListItem\r\n            key={id}\r\n            name={name}\r\n            number={number}\r\n            id={id}\r\n            onDeleteContact={onDeleteContact}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","const Filter = ({ onFilter, filterValue }) => {\r\n  return (\r\n    <>\r\n      <label className=\"Filter\">\r\n        <p>Find contacts by name:</p>\r\n        <input\r\n          name=\"filter\"\r\n          type=\"text\"\r\n          onChange={onFilter}\r\n          value={filterValue}\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","function filterContacts(contacts, filter) {\r\n  const normalizedFilter = filter.toLowerCase().trim()\r\n  return contacts.filter((contact) => {\r\n    return contact.name.toLowerCase().includes(normalizedFilter)\r\n  })\r\n}\r\nexport default filterContacts\r\n","import { Component } from 'react'\nimport { v4 as uuidv4 } from 'uuid'\nimport './App.css'\nimport ContactForm from './components/ContactForm'\nimport ContactList from './components/ContactList'\nimport Filter from './components/Filter'\nimport filterContacts from './helpers/filterContacts'\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  }\n\n  handleAddContact = (contact) => {\n    if (this.state.contacts.some((el) => el.name === contact.name)) {\n      alert(this.state.name + ' is already in contacts')\n      return\n    }\n    const inputId = uuidv4()\n    this.setState((prev) => ({\n      contacts: [...prev.contacts, { ...contact, id: inputId }],\n    }))\n  }\n\n  handleDeleteContact = (event) => {\n    this.setState({\n      contacts: this.state.contacts.filter(\n        (contact) => contact.id !== event.target.id,\n      ),\n    })\n  }\n  handleFilterContact = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    })\n  }\n  render() {\n    const contacts = filterContacts(this.state.contacts, this.state.filter)\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm handleAddContact={this.handleAddContact} />\n        <h2>Contacts</h2>\n        <Filter\n          filterValue={this.state.filter}\n          onFilter={this.handleFilterContact}\n        />\n        <ContactList\n          contacts={contacts}\n          onDeleteContact={this.handleDeleteContact}\n        />\n      </>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}